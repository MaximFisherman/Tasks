class Error
{
private:
	map<int, string> errorMsg;
public:
	Error() {
		errorMsg.insert(std::pair<int, string>(1, "Test error"));
	};

	string find(int id_error)
	{
		map <int,string>::iterator search = errorMsg.find(id_error);
		if (search != errorMsg.end())
			return search->second;
		else
			return "Error not found in error class";
	}
};
int test(int a = 0)
{
	int i = 0;
	Error err;
	while (1)
	{
		try {
			if (i == 1) throw runtime_error(err.find(1));
			if (i == 10) throw runtime_error(err.find(1));
			assert(i == 101);
		}
		catch(exception& e){
			cout << "Exeption: "<<  e.what();
		}
		i++;
	}

	return 0;
}
